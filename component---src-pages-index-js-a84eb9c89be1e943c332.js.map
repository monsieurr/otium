{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/images/colonne.png","webpack:///./src/components/seo.js","webpack:///./src/images/apollon.jpg"],"names":["pageQuery","IndexPage","data","title","src","ApollonImg","alt","allMarkdownRemark","edges","map","post","sizes","node","frontmatter","featuredImage","childImageSharp","id","href","path","excerpt","ColumnImg","style","maxWidth","marginBottom","module","exports","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"2OAAA,6KA4DaA,EAAS,aA4BPC,UA5EG,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,8CACA,yBAAKC,IAAKC,IAAYC,IAAI,yBAEzBJ,EAAKK,kBAAkBC,MAAMC,KAAI,SAAAC,GAAI,OACtC,6BACM,kBAAC,IAAD,CAAKC,MAAOD,EAAKE,KAAKC,YAAYC,cAAcC,gBAAgBJ,QAChE,4BACE,kBAAC,OAAD,CACEK,GAAIN,EAAKE,KAAKI,GACdC,KAAMP,EAAKE,KAAKC,YAAYK,MACzBR,EAAKE,KAAKC,YAAYV,OAE3B,8BAEF,2BAAIO,EAAKE,KAAKO,SACd,wCAMN,mDACmB,6BADnB,8BAE2B,6BAF3B,2BAGwB,6BAHxB,+BAI4B,6BAJ5B,uBAKoB,6BALpB,iCAM8B,6BAN9B,8BAO2B,6BAP3B,+BAQ4B,6BAR5B,aASU,6BATV,+BAU4B,6BAV5B,+BAW4B,6BAX5B,wBAYqB,6BAZrB,0CAauC,6BAbvC,wBAcqB,6BAdrB,gCAe6B,6BAf7B,KAiBA,sDACA,yBAAKf,IAAKgB,IAAWd,IAAI,wBACzB,yBAAKe,MAAO,CAAEC,SAAS,QAAUC,aAAa,gB,qBCvDlDC,EAAOC,QAAU,IAA0B,uD,mFCY3C,SAASC,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAM1B,EAAS,EAATA,MAC9B2B,EADuC,OACvCA,KAcFC,EAAkBJ,GAAeG,EAAKE,aAAaL,YAEzD,OACE,kBAAC,IAAD,CACEM,eAAgB,CACdL,QAEFzB,MAAOA,EACP+B,cAAa,QAAUJ,EAAKE,aAAa7B,MACzC0B,KAAM,CACJ,CACEM,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASjC,GAEX,CACEkC,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASN,EAAKE,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAASjC,GAEX,CACEgC,KAAK,sBACLC,QAASL,IAEXQ,OAAOV,KAKfH,EAAIc,aAAe,CACjBZ,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD,O,qBCvFfF,EAAOC,QAAU,IAA0B","file":"component---src-pages-index-js-a84eb9c89be1e943c332.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport ApollonImg from \"../images/apollon.jpg\"\nimport ColumnImg from \"../images/colonne.png\"\nimport SEO from \"../components/seo\"\nimport Img from \"gatsby-image\"\n\n\n\n\nconst IndexPage = ({data}) => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <h2>Art et Confort</h2>\n    <img src={ApollonImg} alt=\"Une statue d'Apollon\" />\n\n    {data.allMarkdownRemark.edges.map(post => (\n    <div>\n          <Img sizes={post.node.frontmatter.featuredImage.childImageSharp.sizes} />\n          <h3>\n            <Link \n              id={post.node.id}\n              href={post.node.frontmatter.path}>\n                {post.node.frontmatter.title}\n            </Link>\n            <br/>\n          </h3>\n          <p>{post.node.excerpt}</p>\n          <p>-----</p>\n    </div>\n    ))}\n\n\n\n    <p>\"\n    Otio qui nescit uti<br/>\n    plus negotii habet quam cum<br/>\n    est negotium in negotio;<br/>\n    nam cui quod agat institutum<br/>\n    est non ullo negotio<br/>\n    id agit, id studet, ibi mentem<br/>\n    atque animum delectat suum:<br/>\n    otioso in otio animus nescit<br/>\n    quid velit<br/>\n    Hoc idem est ; em neque domi<br/>\n    nunc nos nec militiae sumus;<br/>\n    imus huc, hinc illuc;<br/>\n    cum illuc ventum est, ire illinc lubet.<br/>\n    Incerte errat animus,<br/>\n    praeterpropter vitam vivitur.<br/>\n    \"</p>\n    <h2>Temple en construction</h2>\n    <img src={ColumnImg} alt=\"Une colonne grecque\" />\n    <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n    </div>\n  </Layout>\n)\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      limit: 10\n      sort: {fields: [frontmatter___date], order: DESC}\n      filter: {frontmatter: {published: {eq: true}}}\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 280)\n          frontmatter {\n            title\n            path\n            featuredImage {\n              childImageSharp{\n                  sizes(maxWidth: 630) {\n                      ...GatsbyImageSharpSizes\n                  }\n              }\n          }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n\n","module.exports = __webpack_public_path__ + \"static/colonne-d37d9fe5815825e12054e3915dae46aa.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","module.exports = __webpack_public_path__ + \"static/apollon-e7efe2e52e9a6ed0300ccb2dee1a3f64.jpg\";"],"sourceRoot":""}